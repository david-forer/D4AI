---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import SimpleContainer from '../../components/SimpleContainer.astro';

// Generate static paths for all blog posts
export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the blog post data
const { entry } = Astro.props as { entry: CollectionEntry<'blog'> };
const { Content } = await entry.render();

// Format the publication date
const formattedDate = new Date(entry.data.pubDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

// Define categories for the navigation
const categories = [
  { name: "AI Integration", slug: "ai" },
  { name: "SEO Strategy", slug: "seo" },
  { name: "Operations", slug: "operations" },
  { name: "Automation", slug: "automation" },
  { name: "Business Growth", slug: "business" }
];
---

<Layout title={`${entry.data.title} | D4AI`}>
  <main>
    <!-- Hero Section -->
    <section class="bg-gradient-to-r from-blue-600 to-blue-800 py-12">
      <div class="container mx-auto px-6 max-w-5xl">
        <div class="flex flex-col justify-center">
          <div class="max-w-3xl mx-auto">
            <a href="/blog" class="text-blue-200 hover:text-white mb-4 inline-flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
              </svg>
              Back to Blog
            </a>
            <h1 class="text-3xl md:text-4xl font-bold text-white mb-4">{entry.data.title}</h1>
            <p class="text-blue-100">
              Published on {formattedDate}
              {entry.data.updatedDate && (
                <span> Â· Updated on {new Date(entry.data.updatedDate).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })}</span>
              )}
            </p>
            
            {entry.data.tags && (
              <div class="mt-4 flex flex-wrap gap-2">
                {entry.data.tags.map((tag) => {
                  // Find if this tag matches one of our defined categories
                  const matchedCategory = categories.find(cat =>
                    cat.slug === tag.toLowerCase() ||
                    cat.name.toLowerCase() === tag.toLowerCase()
                  );
                  
                  return matchedCategory ? (
                    <a
                      href={`/blog/category/${matchedCategory.slug}`}
                      class="px-2 py-1 bg-blue-500 bg-opacity-30 text-white text-xs rounded-full hover:bg-blue-500 hover:bg-opacity-40 transition-colors"
                    >
                      {matchedCategory.name}
                    </a>
                  ) : (
                    <span class="px-2 py-1 bg-blue-500 bg-opacity-20 text-white text-xs rounded-full">
                      {tag}
                    </span>
                  );
                })}
              </div>
            )}
          </div>
        </div>
      </div>
    </section>

    <SimpleContainer>
      <article class="py-12 max-w-6xl mx-auto">
        {entry.data.heroImage && (
          <img
            src={entry.data.heroImage}
            alt={entry.data.title}
            class="w-full h-auto rounded-lg mb-8 shadow-md max-w-[1400px] mx-auto"
          />
        )}
        
        <div class="prose prose-lg max-w-none">
          <Content />
        </div>
      </article>
    </SimpleContainer>
  </main>
</Layout>

<style>
  /* Add any additional styling for blog posts here */
  :global(.prose h1) {
    font-size: 2.25rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: #1d4ed8; /* blue-700 */
  }
  
  :global(.prose h2) {
    font-size: 1.75rem;
    margin-top: 1.75rem;
    margin-bottom: 0.75rem;
    color: #1d4ed8; /* blue-700 */
  }
  
  :global(.prose h3) {
    font-size: 1.5rem;
    margin-top: 1.5rem;
    margin-bottom: 0.5rem;
    color: #1d4ed8; /* blue-700 */
  }
  
  :global(.prose p) {
    margin-bottom: 1.25rem;
    line-height: 1.7;
  }
  
  :global(.prose ul, .prose ol) {
    margin-left: 2rem;
    margin-bottom: 1.25rem;
  }
  
  :global(.prose li) {
    margin-bottom: 0.5rem;
  }
  
  :global(.prose a) {
    color: #2563eb; /* blue-600 */
    text-decoration: underline;
  }
  
  :global(.prose blockquote) {
    border-left: 4px solid #3b82f6; /* blue-500 */
    padding-left: 1rem;
    font-style: italic;
    margin-left: 0;
    margin-right: 0;
    color: #4b5563; /* gray-600 */
  }
  
  /* Make images in blog content wider */
  :global(.prose img) {
    max-width: 100%;
    height: auto;
    margin: 2rem auto;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }
  
  /* For larger screens, allow images to be wider */
  @media (min-width: 768px) {
    :global(.prose img) {
      max-width: 100%;
      margin-left: auto;
      margin-right: auto;
    }
  }
</style>