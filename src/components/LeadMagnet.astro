---
// LeadMagnet.astro - A flexible lead magnet component

export interface FormField {
  id: string;
  label: string;
  inputType: 'text' | 'email' | 'password' | 'number' | 'tel' | 'url' | 'date' | 'time' | 'datetime-local' | 'month' | 'week' | 'color' | 'search' | 'file' | 'hidden';
  required: boolean;
  placeholder: string;
}

export interface Props {
  title: string;
  description: string;
  imageUrl?: string;
  formFields: FormField[];
  ctaText: string;
  leadMagnetType: string;
  thankYouMessage: string;
  variant?: 'inline' | 'card' | 'fullWidth' | 'sidebar';
  backgroundColor?: string;
  textColor?: string;
  accentColor?: string;
}

const {
  title,
  description,
  imageUrl,
  formFields,
  ctaText,
  leadMagnetType,
  thankYouMessage,
  variant = 'inline',
  backgroundColor = 'bg-blue-50',
  textColor = 'text-gray-800',
  accentColor = 'bg-blue-600',
} = Astro.props;

// Lead magnet icons
const icons = {
  ebook: 'üìö',
  checklist: '‚úÖ',
  videoTraining: 'üé¨',
  freeConsultation: 'üí¨',
  discount: 'üè∑Ô∏è',
  template: 'üìã',
  webinar: 'üñ•Ô∏è',
  default: 'üéÅ'
};

const icon = icons[leadMagnetType] || icons.default;

// Generate a unique form ID
const formId = `lead-magnet-form-${Math.random().toString(36).substring(2, 11)}`;
---

{variant === 'fullWidth' ? (
  <!-- Full Width Variant -->
  <div class={`w-full py-12 px-4 sm:px-6 lg:px-8 ${backgroundColor}`}>
    <div class="max-w-7xl mx-auto">
      <div class="lg:grid lg:grid-cols-12 lg:gap-8 items-center">
        <!-- Content Section (5/12) -->
        <div class="lg:col-span-5 text-center lg:text-left mb-8 lg:mb-0">
          <h3 class={`text-2xl sm:text-3xl font-bold ${textColor} mb-4`}>
            {title}
          </h3>
          
          <p class={`${textColor} text-lg mb-6 opacity-90`}>
            {description}
          </p>
          
          {imageUrl && (
            <div class="hidden lg:block mt-8">
              <img 
                src={imageUrl}
                alt={title}
                class="mx-auto lg:mx-0 h-32 w-auto object-contain"
              />
            </div>
          )}
        </div>
        
        <!-- Form Section (7/12) -->
        <div class="lg:col-span-7">
          <div class="bg-white rounded-lg shadow-xl p-6 sm:p-8 max-w-3xl mx-auto">
            <form 
              id={formId}
              class="space-y-5"
              method="POST"
              data-thank-you-message={thankYouMessage}
            >
              {formFields.map((field) => (
                <div class="form-group">
                  <label 
                    for={`${formId}-${field.id}`} 
                    class="block text-sm font-medium text-gray-700 mb-1"
                  >
                    {field.label} {field.required && <span class="text-red-500">*</span>}
                  </label>
                  
              <input 
                type={field.inputType} 
                id={`${formId}-${field.id}`}
                name={field.id}
                placeholder={field.placeholder}
                required={field.required}
                class="w-full px-4 py-3 text-base border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
                </div>
              ))}
              
              <button 
                type="submit"
                class={`w-full flex justify-center py-3 px-6 text-base border border-transparent rounded-lg shadow-sm font-medium text-white ${accentColor} hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 mt-6`}
              >
                {ctaText}
              </button>
              
              <p class="text-xs text-gray-500 mt-2 text-center">
                We respect your privacy. Unsubscribe at any time.
              </p>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
) : variant === 'card' ? (
  <!-- Card Variant -->
  <div class={`max-w-2xl mx-auto rounded-xl shadow-lg overflow-hidden ${backgroundColor}`}>
    <div class="md:flex">
      {imageUrl ? (
        <div class="md:flex-shrink-0 relative">
          <img 
            src={imageUrl} 
            alt={title}
            class="h-48 w-full object-cover md:h-full md:w-56"
          />
          <div class="absolute top-0 right-0 bg-gradient-to-bl from-blue-500 to-transparent text-white text-xs font-bold px-3 py-1 rounded-bl-lg">
            FREE
          </div>
        </div>
      ) : (
        <div class="flex items-center justify-center bg-gradient-to-r from-blue-500 to-purple-600 md:flex-shrink-0 h-32 w-full md:h-full md:w-32">
          <span class="text-6xl text-white">{icon}</span>
        </div>
      )}
      
      <div class="p-8 md:flex-1">
        <h3 class={`text-xl font-bold ${textColor} mb-3`}>
          {title}
        </h3>
        
        <p class={`${textColor} mb-6 opacity-90`}>
          {description}
        </p>
        
        <form 
          id={formId}
          class="space-y-4"
          method="POST"
          data-thank-you-message={thankYouMessage}
        >
          {formFields.map((field) => (
            <div class="form-group">
              <label 
                for={`${formId}-${field.id}`} 
                class={`block text-sm font-medium ${textColor} mb-1`}
              >
                {field.label} {field.required && <span class="text-red-500">*</span>}
              </label>
              
              <input 
                type={field.inputType} 
                id={`${formId}-${field.id}`}
                name={field.id}
                placeholder={field.placeholder}
                required={field.required}
                class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>
          ))}
          
          <button 
            type="submit"
            class={`w-full flex justify-center py-2 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white ${accentColor} hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 mt-4`}
          >
            {ctaText}
          </button>
          
          <p class="text-xs text-gray-500 mt-2 text-center">
            We respect your privacy. Unsubscribe at any time.
          </p>
        </form>
      </div>
    </div>
  </div>
) : variant === 'sidebar' ? (
  <!-- Sidebar Variant -->
  <div class={`w-full rounded-lg p-6 ${backgroundColor}`}>
    <div class="text-center mb-4">
      {imageUrl ? (
        <img 
          src={imageUrl} 
          alt={title}
          class="mx-auto h-24 w-auto object-contain"
        />
      ) : (
        <span class="text-4xl">{icon}</span>
      )}
    </div>
    
    <h3 class={`text-xl font-bold ${textColor} mb-3 text-center`}>
      {title}
    </h3>
    
    <p class={`${textColor} mb-4 opacity-90 text-center`}>
      {description}
    </p>
    
    <form 
      id={formId}
      class="space-y-4"
      method="POST"
      data-thank-you-message={thankYouMessage}
    >
      {formFields.map((field) => (
        <div class="form-group">
          <label 
            for={`${formId}-${field.id}`} 
            class={`block text-sm font-medium ${textColor} mb-1`}
          >
            {field.label} {field.required && <span class="text-red-500">*</span>}
          </label>
          
          <input 
            type={field.inputType} 
            id={`${formId}-${field.id}`}
            name={field.id}
            placeholder={field.placeholder}
            required={field.required}
            class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          />
        </div>
      ))}
      
      <button 
        type="submit"
        class={`w-full flex justify-center py-2 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white ${accentColor} hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 mt-2`}
      >
        {ctaText}
      </button>
      
      <p class="text-xs text-gray-500 mt-2 text-center">
        We respect your privacy. Unsubscribe at any time.
      </p>
    </form>
  </div>
) : (
  <!-- Inline Variant (Default) -->
  <div class={`max-w-4xl mx-auto py-8 px-4 sm:px-6 rounded-lg ${backgroundColor}`}>
    <div class="md:flex md:items-center">
      {imageUrl ? (
        <div class="md:flex-shrink-0 mb-6 md:mb-0 md:mr-8">
          <img 
            src={imageUrl} 
            alt={title}
            class="mx-auto h-32 w-auto object-contain"
          />
        </div>
      ) : (
        <div class="text-center md:text-left mb-6 md:mb-0 md:mr-8">
          <span class="text-5xl">{icon}</span>
        </div>
      )}
      
      <div class="md:flex-1">
        <h3 class={`text-xl font-bold ${textColor} mb-3 text-center md:text-left`}>
          {title}
        </h3>
        
        <p class={`${textColor} mb-4 opacity-90 text-center md:text-left`}>
          {description}
        </p>
        
        <form 
          id={formId}
          class="space-y-4 md:space-y-0 md:flex md:items-end md:space-x-4"
          method="POST"
          data-thank-you-message={thankYouMessage}
        >
          {formFields.map((field, index) => (
            <div class={`form-group ${formFields.length > 1 ? 'md:flex-1' : 'w-full'}`}>
              <label 
                for={`${formId}-${field.id}`} 
                class={`block text-sm font-medium ${textColor} mb-1`}
              >
                {field.label} {field.required && <span class="text-red-500">*</span>}
              </label>
              
              <input 
                type={field.inputType} 
                id={`${formId}-${field.id}`}
                name={field.id}
                placeholder={field.placeholder}
                required={field.required}
                class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>
          ))}
          
          <div class={formFields.length > 1 ? 'md:flex-shrink-0' : 'w-full'}>
            <button 
              type="submit"
              class={`w-full md:w-auto flex justify-center py-2 px-6 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white ${accentColor} hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`}
            >
              {ctaText}
            </button>
          </div>
        </form>
        
        <p class="text-xs text-gray-500 mt-2 text-center md:text-left">
          We respect your privacy. Unsubscribe at any time.
        </p>
      </div>
    </div>
  </div>
)}

<script define:vars={{ formId, thankYouMessage }}>
// Client-side form handling
document.addEventListener('DOMContentLoaded', () => {
  const form = document.getElementById(formId);
  if (form) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Here you would typically send the form data to your backend or email service
      // For now, we'll just simulate a successful submission
      
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());
      
      // Simulate API call
      try {
        // Replace with your actual form submission logic
        // await fetch('/api/lead-magnet', { method: 'POST', body: JSON.stringify(data) });
        
        // Show thank you message
        const thankYouMessage = form.dataset.thankYouMessage || 'Thank you for signing up!';
        
        // Replace form with thank you message
        const formContainer = form.parentNode;
        const formHeight = form.offsetHeight;
        
        // Create thank you element
        const thankYouElement = document.createElement('div');
        thankYouElement.className = `min-h-[${formHeight}px] flex items-center justify-center text-center p-4`;
        thankYouElement.innerHTML = `
          <div>
            <div class="text-green-500 text-5xl mb-4">‚úì</div>
            <h4 class="text-lg font-medium mb-2">Success!</h4>
            <p>${thankYouMessage}</p>
          </div>
        `;
        
        // Replace form with thank you message
        formContainer.replaceChild(thankYouElement, form);
        
      } catch (error) {
        console.error('Error submitting form:', error);
        alert('There was an error submitting the form. Please try again.');
      }
    });
  }
});
</script>
